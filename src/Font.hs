{-# LANGUAGE BinaryLiterals #-}
module Font (initFont, digitSize) where

import Data.Word (Word8(..))

digitSize :: Int
digitSize = 5

-- font is all hex digits drawn in binary
-- see http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#font
initFont :: [Word8]
initFont = concat [ [   0b11110000
                    ,   0b10010000
                    ,   0b10010000
                    ,   0b10010000
                    ,   0b11110000 ], -- 0
                    [   0b00100000
                    ,   0b01100000
                    ,   0b00100000
                    ,   0b00100000
                    ,   0b01110000 ], -- 1
                    [   0b11110000
                    ,   0b00010000
                    ,   0b11110000
                    ,   0b10000000
                    ,   0b11110000 ], -- 2
                    [   0b11110000
                    ,   0b00010000
                    ,   0b11110000
                    ,   0b00010000
                    ,   0b11110000 ], -- 3
                    [   0b10010000
                    ,   0b10010000
                    ,   0b11110000
                    ,   0b00010000
                    ,   0b00010000 ], -- 4
                    [   0b11110000
                    ,   0b10000000
                    ,   0b11110000
                    ,   0b00010000
                    ,   0b11110000 ], -- 5
                    [   0b11110000
                    ,    0b10000000
                    ,    0b11110000
                    ,    0b10010000
                    ,    0b11110000 ], -- 6
                    [   0b11110000
                    ,   0b00010000
                    ,   0b00100000
                    ,   0b01000000
                    ,   0b01000000 ], -- 7
                    [   0b11110000
                    ,   0b10010000
                    ,   0b11110000
                    ,   0b10010000
                    ,   0b11110000 ], -- 8
                    [   0b11110000
                    ,   0b10010000
                    ,   0b11110000
                    ,   0b00010000
                    ,   0b11110000 ], -- 9
                    [   0b11110000
                    ,   0b10010000
                    ,   0b11110000
                    ,   0b10010000
                    ,   0b10010000 ], -- A
                    [   0b11100000
                    ,   0b10010000
                    ,   0b11100000
                    ,   0b10010000
                    ,   0b11100000 ], -- B
                    [   0b11110000
                    ,   0b10000000
                    ,   0b10000000
                    ,   0b10000000
                    ,   0b11110000 ], -- C
                    [   0b11100000
                    ,   0b10010000
                    ,   0b10010000
                    ,   0b10010000
                    ,   0b11100000 ], -- D
                    [   0b11110000
                    ,   0b10000000
                    ,   0b11110000
                    ,   0b10000000
                    ,   0b11110000 ], -- E
                    [   0b11110000
                    ,   0b10000000
                    ,   0b11110000
                    ,   0b10000000
                    ,   0b10000000 ] ] -- F
